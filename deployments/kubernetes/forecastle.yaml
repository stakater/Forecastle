---
# Source: crds/forecastleApp.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: forecastleapps.forecastle.stakater.com
spec:
  conversion:
    strategy: None
  group: forecastle.stakater.com
  names:
    kind: ForecastleApp
    listKind: ForecastleAppList
    plural: forecastleapps
    singular: forecastleapp
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              group:
                type: string
              icon:
                type: string
              instance:
                type: string
              name:
                type: string
              networkRestricted:
                type: boolean
              properties:
                additionalProperties:
                  type: string
                type: object
              url:
                type: string
              urlFrom:
                properties:
                  ingressRef:
                    type: object
                    properties:
                      name:
                        type: string
                  routeRef:
                    type: object
                    properties:
                      name:
                        type: string
                type: object
            required:
            - name
            - group
            - icon
            type: object
          status:
            type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: forecastle/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
  name: forecastle
---
# Source: forecastle/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: forecastle
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
data:
  config.yaml: |-
    crdEnabled: true
    customApps: {}
    headerBackground: null
    headerForeground: null
    instanceName: null
    namespaceSelector:
      any: true
      matchNames:
      - stakater
    title: null
---
# Source: forecastle/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: forecastle-cluster-ingress-role
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
rules:
- apiGroups: ["", "route.openshift.io", "networking.k8s.io"]
  resources: ["ingresses", "routes", "namespaces"]
  verbs: ["get", "list"]
- apiGroups:
  - forecastle.stakater.com
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: forecastle/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: forecastle-cluster-ingress-role-binding
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: forecastle-cluster-ingress-role
subjects:
- kind: ServiceAccount
  name: forecastle
  namespace: default
---
# Source: forecastle/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
    expose: "true"
  name: forecastle
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
---
# Source: forecastle/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
  name: forecastle
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: forecastle
      group: com.stakater.platform
      provider: stakater
  template:
    metadata:
      labels:
        app: forecastle
        group: com.stakater.platform
        provider: stakater
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "stakater/forecastle:v1.0.82"
        name: forecastle        
        volumeMounts:
        - name: forecastle-config
          mountPath: /etc/forecastle
      volumes:
      - name: forecastle-config
        configMap:
          name: forecastle
      serviceAccountName: forecastle
---
# Source: forecastle/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: forecastle
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.82"
    chart: "forecastle-v1.0.82"
    release: "forecastle"
    heritage: "Helm"
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: forecastle
    weight: 100
  wildcardPolicy: None
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect
